{"version":3,"sources":["constants/intervals.js","utils/getNextInterval.js","utils/notifications.js","redux/modules/timer.js","utils/common.js","utils/timeConverter.js","constants/colors.js","components/Nav.jsx","utils/progressBarSchemeGenerator.js","utils/getIntervalColor.js","components/ProgressBar.jsx","containers/ProgressBarContainer.js","redux/modules/todo.js","components/Todo.jsx","components/TimerCurrentTodo.jsx","components/Circle.jsx","components/TimerControls.jsx","components/Timer.jsx","pages/Timer.jsx","containers/TimerContainer.js","redux/modules/settings.js","pages/Settings.jsx","containers/SettingsContainer.js","components/TodoList.jsx","pages/Todo.jsx","containers/TodoContainer.js","pages/Faq.jsx","components/App.jsx","containers/AppContainer.js","registerServiceWorker.js","redux/configureStore.js","index.js"],"names":["intervals","work","smallBreak","bigBreak","getNextInterval","currentInterval","totalSpentTimeInMin","settings","getInterval","interval","roundCount","arguments","length","undefined","nextInnerTotalSpentTimeInMin","intervalDurationsInMin","nextInterval","currentRoundCount","pomidoroInRound","nextRoundCount","getNextRoundCount","notify","window","alert","Notification","permission","getMessage","actionTypes","SET_REST_OF_INTERVAL","SET_TOTAL_SPENT_TIME","SET_CURRENT_INTERVAL","DECREMENT","intervalId","init","dispatch","getState","state","setRestOfInterval","timer","start","setInterval","restOfIntervalInSec","goToNextInterval","type","nextTotalSpentTimeInMin","showNotification","initialState","timeConverter","time","seconds","addZero","getSeconds","minutes","Math","floor","getMinutes","concat","n","ns","String","colors","red","redSecondary","green","Navigation","styled","div","display","padding","justifyContent","myNavLinkStyle","color","textDecoration","alignItems",":hover","MyNavLink","NavLink","Icon","span","fontSize","marginRight","IconText","@media(min-width: 700px)","activeLinkStyle","Nav","react_default","a","createElement","activeStyle","exact","to","className","progressBarSchemeGenerator","targetTimeInMin","bigBreakNumbers","targetNumberOfPomidoro","calculateTargetTimeInMin","progressBarScheme","countOfWorkInterval","innerSpentTimeInMin","currentIntervalDurationInMin","width","activeWidth","currentIntervalDurationInSec","intervalScheme","push","getIntervalColor","isItBackground","Bar","height","Interval","_templateObject","_ref","_ref2","PassedBackground","_templateObject2","_ref3","_ref4","ProgressBar","_ref5","scheme","map","s","i","key","connect","components_ProgressBar","toggleCompleteness","todoId","Todo","RemoveButton","cursor","textAlign","&:hover","CompletenesWrapper","Text","Todo_templateObject","isCompleted","CompletenesAndText","TodoComponent","todo","remove","provided","snapshot","draggableStyle","isDragging","isItBreak","Todo_Todo","Object","assign","ref","innerRef","style","objectSpread","userSelect","borderBottom","background","dragHandleProps","id","checked","onChange","bind","disabled","htmlFor","text","onClick","placeholder","EmptyTodo","&>a","CurrentTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentTodo","todoOpacity","componentWillReceiveProps","nextProps","setTodoWithProps","setTodo","assertThisInitialized","currentTodoId","fadeOut","setTimeout","fadeIn","todos","find","t","setState","fade","isItIn","newTodoOpacity","_this$props","react_router_dom","opacity","React","Component","Circle","componentDidMount","bg","refs","ctx","getContext","beginPath","strokeStyle","isItWork","lineCap","closePath","fill","lineWidth","imd","getImageData","draw","progressBarWidth","componentDidUpdate","current","linePoint","putImageData","arc","quart","PI","stroke","Button","button","backgroundColor","border","borderRadius","&:active, &:focus","outline","&:first-child","borderRight","&:last-child","borderLeft","CenterButton","&>i","TimerControls","isTicking","pause","next","reset","centerButtonProps","class","handler","Watch","margin","position","&>canvas","@media(min-width: 500px)","TimeCounter","marginBottom","@media(min-width: 400px)","CircleContent","left","right","top","bottom","Timer","formatedTimeCounter","components_Circle","components_TimerControls","Content","CurrentTodoWrapper","TimerPage","components_Timer","TimerCurrentTodo","filter","td","clearInterval","pages_Timer","SET_WORK_DURATION","SET_SMALL_BREAK_DURATION","SET_BIG_BREAK_DURATION","SET_POMIDORO_IN_ROUND","SET_TARGET_NUMBER_OF_POMIDORO","TOGGLE_SHOW_NOTIFICATION","selectAll","event","target","select","boxSizing","Row","minHeight","&:not(:last-child)","Label","Inputs","&>input","boxShadow","CheckBoxWrapper","& label","paddingLeft","SettingsPage","set","toggleShowNotification","Settings_Content","Settings_Button","value","onFocus","SettingsContainer","field","rawValue","_parseInput","actionCreator","Settings","valueInt","parseInt","isNaN","setWorkDuration","setSmallBreakDuration","setBigBreakDuration","setPomidoroInRound","setTargetNumberOfPomidoro","TodoList","reorder","react_beautiful_dnd_esm","onDragEnd","source","destination","index","droppableId","isDraggingOver","draggableId","Input","input","Controls","TodoPage","add","todoText","handleTodoTextChange","handleKeyPress","Todo_Content","onKeyPress","Todo_Button","components_TodoList","TodoContainer","e","addTodo","pages_Todo","nanoid","Title","h2","Info","fontStyle","marginTop","Link","Faq","Faq_Content","href","h1","fontWeight","App","flexDirection","@media(min-height: 440px)","@media(min-height: 640px)","flex","AppWithRouter","App_Content","Helmet","App_Title","containers_ProgressBarContainer","react_router","path","component","components_Nav","AppContainer","requestPermission","getPermission","initTimer","components_App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","reducer","combineReducers","action","existToDo","result","Array","from","_result$splice","splice","removed","slicedToArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","es","containers_AppContainer","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f99a929e.chunk.js","sourcesContent":["// @flow\nconst intervals: {\n  work: Interval,\n  smallBreak: Interval,\n  bigBreak: Interval,\n} = {\n  work: 'work',\n  smallBreak: 'smallBreak',\n  bigBreak: 'bigBreak',\n}\n\nexport default intervals\n","// @flow\nimport intervals from '../constants/intervals'\n\nexport default function getNextInterval(\n  currentInterval: Interval,\n  totalSpentTimeInMin: number,\n  settings: SettingsState\n): Interval {\n  function getNextRoundCount(\n    currentRoundCount: number,\n    interval: Interval\n  ): number {\n    if (interval !== intervals.work) return currentRoundCount\n\n    return currentRoundCount < settings.pomidoroInRound\n      ? currentRoundCount + 1\n      : 1\n  }\n\n  function getNextInterval(\n    interval: Interval,\n    currentRoundCount: number\n  ): Interval {\n    if (interval === intervals.smallBreak || interval === intervals.bigBreak)\n      return intervals.work\n\n    if (currentRoundCount < settings.pomidoroInRound)\n      return intervals.smallBreak\n\n    return intervals.bigBreak\n  }\n\n  function getInterval(\n    interval: Interval,\n    roundCount: number = 1,\n    innerTotalSpentTimeInMin: number = 0\n  ): Interval {\n    const nextInnerTotalSpentTimeInMin =\n      innerTotalSpentTimeInMin + settings.intervalDurationsInMin[interval]\n    const nextInterval = getNextInterval(interval, roundCount)\n    const nextRoundCount = getNextRoundCount(roundCount, interval)\n\n    if (nextInnerTotalSpentTimeInMin > totalSpentTimeInMin) return nextInterval\n\n    return getInterval(\n      nextInterval,\n      nextRoundCount,\n      nextInnerTotalSpentTimeInMin\n    )\n  }\n\n  return getInterval(intervals.work)\n}\n","// @flow\nimport intervals from '../constants/intervals'\n\nexport function getPermission(): void {\n  if (!('Notification' in window))\n    return alert('Ваш браузер не поддерживает уведомления.')\n\n  const { Notification } = window\n\n  if (Notification.permission === 'granted') return\n\n  if (window.Notification.permission !== 'denied')\n    window.Notification.requestPermission()\n}\n\nexport function notify(nextInterval: Interval): void {\n  if (!('Notification' in window))\n    return alert('Ваш браузер не поддерживает уведомления.')\n\n  const { Notification } = window\n\n  if (Notification.permission !== 'granted')\n    return alert('Нужно разрешить уведомления в браузере!')\n\n  new Notification(getMessage(nextInterval))\n}\n\nfunction getMessage(nextInterval: Interval): string {\n  switch (nextInterval) {\n    case intervals.smallBreak:\n      return 'Маленький перерыв'\n    case intervals.bigBreak:\n      return 'Большой перерыв'\n    default:\n      return 'Пора поработать'\n  }\n}\n","// @flow\nimport getNextInterval from '../../utils/getNextInterval'\nimport { notify } from '../../utils/notifications'\nimport intervals from '../../constants/intervals'\n\nconst actionTypes = {\n  SET_REST_OF_INTERVAL: 'SET_REST_OF_INTERVAL',\n  SET_TOTAL_SPENT_TIME: 'SET_TOTAL_SPENT_TIME',\n  SET_CURRENT_INTERVAL: 'SET_CURRENT_INTERVAL',\n  DECREMENT: 'DECREMENT',\n}\ntype ActionType = $Keys<typeof actionTypes>\n\nlet intervalId = 0\n\n// Action Creators\n\nexport function init(): (\n  dispatch: () => any,\n  getState: () => GlobalState\n) => void {\n  return (dispatch: (_: any) => any, getState: () => GlobalState) => {\n    const state: GlobalState = getState()\n    const restOfInterval =\n      state.settings.intervalDurationsInMin[state.timer.currentInterval] * 60\n\n    dispatch(setRestOfInterval(restOfInterval))\n  }\n}\n\nexport function start(): any {\n  return (dispatch: (_: any) => any, getState: () => GlobalState) => {\n    if (intervalId !== 0) return\n\n    intervalId = setInterval(() => {\n      const state = getState()\n      const { restOfIntervalInSec } = state.timer\n\n      if (restOfIntervalInSec <= 1) return goToNextInterval(dispatch, state)\n\n      dispatch(decrement())\n    }, 1000)\n  }\n}\n\nexport function pause(): any {\n  return (): void => {\n    clearInterval(intervalId)\n    intervalId = 0\n  }\n}\n\nexport function reset(): any {\n  return (dispatch: (_: any) => void, getState: () => GlobalState) => {\n    const state = getState()\n    const { timer, settings } = state\n\n    dispatch(\n      setRestOfInterval(\n        settings.intervalDurationsInMin[timer.currentInterval] * 60\n      )\n    )\n  }\n}\n\nexport function next(): any {\n  return (dispatch: () => void, getState: () => GlobalState) => {\n    const state = getState()\n\n    goToNextInterval(dispatch, state)\n  }\n}\n\nfunction setRestOfInterval(\n  restOfIntervalInSec: number\n): { type: ActionType, restOfIntervalInSec: number } {\n  return {\n    type: actionTypes.SET_REST_OF_INTERVAL,\n    restOfIntervalInSec,\n  }\n}\n\nfunction setTotalSpentTime(\n  totalSpentTimeInMin: number\n): { type: ActionType, totalSpentTimeInMin: number } {\n  return {\n    type: actionTypes.SET_TOTAL_SPENT_TIME,\n    totalSpentTimeInMin,\n  }\n}\n\nfunction setCurrentInteval(\n  currentInterval: Interval\n): { type: ActionType, currentInterval: Interval } {\n  return {\n    type: actionTypes.SET_CURRENT_INTERVAL,\n    currentInterval,\n  }\n}\n\nfunction decrement(): { type: ActionType } {\n  return {\n    type: actionTypes.DECREMENT,\n  }\n}\n\nfunction goToNextInterval(dispatch: (_: any) => void, state: GlobalState) {\n  const { timer, settings } = state\n\n  const nextInterval = getNextInterval(\n    timer.currentInterval,\n    timer.totalSpentTimeInMin,\n    settings\n  )\n  const nextTotalSpentTimeInMin =\n    state.timer.totalSpentTimeInMin +\n    settings.intervalDurationsInMin[timer.currentInterval]\n\n  if (settings.showNotification) notify(nextInterval)\n\n  dispatch(setTotalSpentTime(nextTotalSpentTimeInMin))\n  dispatch(\n    setRestOfInterval(settings.intervalDurationsInMin[nextInterval] * 60)\n  )\n  dispatch(setCurrentInteval(nextInterval))\n}\n\n// Reducer\n\nconst initialState: TimerState = {\n  currentInterval: intervals.work,\n  totalSpentTimeInMin: 0,\n  restOfIntervalInSec: 0,\n}\n\nexport default function reducer(\n  state: TimerState = initialState,\n  action: Object\n): TimerState {\n  switch (action.type) {\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        restOfIntervalInSec: state.restOfIntervalInSec - 1,\n      })\n\n    case actionTypes.SET_TOTAL_SPENT_TIME:\n      return Object.assign({}, state, {\n        totalSpentTimeInMin: action.totalSpentTimeInMin,\n      })\n\n    case actionTypes.SET_REST_OF_INTERVAL:\n      return Object.assign({}, state, {\n        restOfIntervalInSec: action.restOfIntervalInSec,\n      })\n\n    case actionTypes.SET_CURRENT_INTERVAL:\n      return Object.assign({}, state, {\n        currentInterval: action.currentInterval,\n      })\n\n    default:\n      return state\n  }\n}\n","// @flow\n\nexport function calculateTargetTimeInMin(settings: SettingsState): number {\n  let bigBreakNumbers = Math.floor(\n    settings.targetNumberOfPomidoro / settings.pomidoroInRound\n  )\n\n  if (settings.targetNumberOfPomidoro % settings.pomidoroInRound === 0) {\n    bigBreakNumbers--\n  }\n\n  return (\n    bigBreakNumbers * settings.intervalDurationsInMin.bigBreak +\n    settings.targetNumberOfPomidoro * settings.intervalDurationsInMin.work +\n    (settings.targetNumberOfPomidoro - 1 - bigBreakNumbers) *\n      settings.intervalDurationsInMin.smallBreak\n  )\n}\n\nexport const getMinutes = (time: number): number => Math.floor(time / 60)\n","// @flow\nimport { getMinutes } from './common'\n\nexport default function(time: number): string {\n  const seconds = addZero(getSeconds(time))\n  const minutes = addZero(getMinutes(time))\n\n  return `${minutes}:${seconds}`\n}\n\nfunction addZero(n: number): string {\n  const ns = String(n)\n\n  if (ns.length >= 2) return ns\n\n  return `0${ns}`\n}\n\nconst getSeconds = (time: number): number => time % 60\n","export default {\n  red: '#ff6347',\n  redSecondary: '#b23620',\n  green: '#0eb26d',\n}\n","// @flow\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from '@emotion/styled'\nimport colors from '../constants/colors'\n\nconst Navigation = styled.div({\n  display: 'flex',\n  padding: '0 30px',\n  justifyContent: 'space-between',\n})\n\nconst myNavLinkStyle = {\n  color: '#333',\n  textDecoration: 'none',\n  display: 'flex',\n  alignItems: 'center',\n\n  ':hover': {\n    color: colors.red,\n  },\n}\n\nconst MyNavLink = styled(NavLink)(myNavLinkStyle)\n\nconst Icon = styled.span({\n  fontSize: '30px',\n  marginRight: '10px',\n})\n\nconst IconText = styled.span({\n  display: 'none',\n\n  '@media(min-width: 700px)': {\n    display: 'inline',\n  },\n})\n\nconst activeLinkStyle = { color: colors.red }\n\nconst Nav = () => (\n  <Navigation>\n    <MyNavLink activeStyle={activeLinkStyle} exact={true} to=\"/\">\n      <Icon className=\"fa fa-clock-o\" /> <IconText>Таймер</IconText>\n    </MyNavLink>\n    <MyNavLink activeStyle={activeLinkStyle} to=\"/todo\">\n      <Icon className=\"fa fa-th-list\" /> <IconText>Задачи</IconText>\n    </MyNavLink>\n    <MyNavLink activeStyle={activeLinkStyle} to=\"/settings\">\n      <Icon className=\"fa fa-cog\" /> <IconText>Настройки</IconText>\n    </MyNavLink>\n    <MyNavLink activeStyle={activeLinkStyle} to=\"/faq\">\n      <Icon className=\"fa fa-question-circle-o\" /> <IconText>Что это?</IconText>\n    </MyNavLink>\n  </Navigation>\n)\n\nexport default Nav\n","// @flow\nimport intervals from '../constants/intervals'\nimport getNextInterval from './getNextInterval'\nimport { calculateTargetTimeInMin } from './common'\n\nexport default function(\n  restOfIntervalInSec: number,\n  totalSpentTimeInMin: number,\n  settings: SettingsState\n): Array<IntervalScheme> {\n  const targetTimeInMin = calculateTargetTimeInMin(settings)\n\n  let progressBarScheme: Array<IntervalScheme> = []\n  let countOfWorkInterval = 0\n  let interval = intervals.work\n  let innerSpentTimeInMin = 0\n\n  while (countOfWorkInterval < settings.targetNumberOfPomidoro) {\n    const nextInterval = getNextInterval(\n      interval,\n      innerSpentTimeInMin,\n      settings\n    )\n    const currentIntervalDurationInMin =\n      settings.intervalDurationsInMin[interval]\n\n    const width =\n      settings.intervalDurationsInMin[interval] * 100 / targetTimeInMin\n\n    let activeWidth = 0\n\n    if (totalSpentTimeInMin > innerSpentTimeInMin) activeWidth = 100\n\n    if (totalSpentTimeInMin === innerSpentTimeInMin) {\n      const currentIntervalDurationInSec = currentIntervalDurationInMin * 60\n\n      activeWidth =\n        100 *\n        (currentIntervalDurationInSec - restOfIntervalInSec) /\n        currentIntervalDurationInSec\n    }\n\n    const intervalScheme = {\n      width: `${width}%`,\n      activeWidth: `${activeWidth}%`,\n      type: interval,\n    }\n\n    progressBarScheme.push(intervalScheme)\n\n    innerSpentTimeInMin += settings.intervalDurationsInMin[interval]\n    if (interval === intervals.work) countOfWorkInterval++\n    interval = nextInterval\n  }\n\n  return progressBarScheme\n}\n","// @flow\nimport intervals from '../constants/intervals'\nimport colors from '../constants/colors'\n\nexport default function getIntervalColor(\n  type: Interval,\n  isItBackground: boolean\n): string {\n  if (isItBackground) {\n    switch (type) {\n      case intervals.work:\n        return colors.red\n      case intervals.smallBreak:\n        return colors.green\n      case intervals.bigBreak:\n        return colors.green\n      default:\n        return 'grey'\n    }\n  }\n\n  switch (type) {\n    case intervals.work:\n      return '#c7c7c7'\n    case intervals.smallBreak:\n      return '#a2a2a2'\n    case intervals.bigBreak:\n      return '#a2a2a2'\n    default:\n      return 'grey'\n  }\n}\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\nimport getIntervalColor from '../utils/getIntervalColor'\n\nconst Bar = styled.div({\n  width: '100%',\n  height: '30px',\n  display: 'flex',\n})\n\nconst Interval = styled.div`\n  display: flex;\n  width: ${({ width }) => width};\n  background-color: ${({ type }) => getIntervalColor(type, true)};\n`\n\nconst PassedBackground = styled.div`\n  width: ${({ width }) => width};\n  background-color: ${({ type }) => getIntervalColor(type, false)};\n`\n\nconst ProgressBar = ({ scheme }: { scheme: Array<IntervalScheme> }) => {\n  return (\n    <Bar className={'js--progress-bar'}>\n      {scheme.map((s, i) => (\n        <Interval key={`interval-${i}`} width={s.width} type={s.type}>\n          <PassedBackground width={s.activeWidth} type={s.type} />\n        </Interval>\n      ))}\n    </Bar>\n  )\n}\n\nexport default ProgressBar\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport progressBarSchemeGenerator from '../utils/progressBarSchemeGenerator'\nimport ProgressBar from '../components/ProgressBar'\n\nconst ProgressBarContainer = ({\n  timer,\n  settings,\n}: {\n  timer: TimerState,\n  settings: SettingsState,\n}) => {\n  const progressBarScheme: Array<IntervalScheme> = progressBarSchemeGenerator(\n    timer.restOfIntervalInSec,\n    timer.totalSpentTimeInMin,\n    settings\n  )\n\n  return <ProgressBar scheme={progressBarScheme} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    timer: state.timer,\n    settings: state.settings,\n  }\n}\n\nexport default connect(mapStateToProps)(ProgressBarContainer)\n","// @flow\nimport nanoid from 'nanoid'\n\ntype AddAction = { type: 'ADD', todo: Todo }\ntype RemoveAction = { type: 'REMOVE', todoId: string }\ntype ToggleCompletenessAction = {\n  type: 'TOGGLE_COMPLETENESS',\n  todoId: string,\n}\ntype ReorderAction = { type: 'REORDER', source: number, destination: number }\n\ntype Action =\n  | RemoveAction\n  | AddAction\n  | ToggleCompletenessAction\n  | ReorderAction\n\nexport function add(text: string): AddAction {\n  const todo = {\n    id: nanoid(),\n    text,\n    isCompleted: false,\n  }\n\n  return {\n    type: 'ADD',\n    todo,\n  }\n}\n\nexport function remove(todoId: string): RemoveAction {\n  return {\n    type: 'REMOVE',\n    todoId: todoId,\n  }\n}\n\nexport function reorder(source: number, destination: number): ReorderAction {\n  return {\n    type: 'REORDER',\n    source,\n    destination,\n  }\n}\n\nexport function toggleCompleteness(todoId: string): ToggleCompletenessAction {\n  return {\n    type: 'TOGGLE_COMPLETENESS',\n    todoId,\n  }\n}\n\n// Reducer\n\nconst initialState: ToDoState = []\n\nexport default function reducer(\n  state: ToDoState = initialState,\n  action: Action\n): ToDoState {\n  switch (action.type) {\n    case 'ADD':\n      return [action.todo].concat(state)\n\n    case 'REMOVE':\n      return state.filter(existToDo => existToDo.id !== action.todoId)\n\n    case 'REORDER':\n      let result = Array.from(state)\n      const [removed] = result.splice(action.source, 1)\n      result.splice(action.destination, 0, removed)\n      return result\n\n    case 'TOGGLE_COMPLETENESS':\n      return state.map(existToDo => {\n        if (existToDo.id !== action.todoId) return existToDo\n\n        return Object.assign({}, existToDo, {\n          isCompleted: !existToDo.isCompleted,\n        })\n      })\n\n    default:\n      return state\n  }\n}\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\n\nimport colors from '../constants/colors'\n\nconst getItemStyle = (draggableStyle, isDragging) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  borderBottom: `1px solid ${colors.red}`,\n  padding: '10px 0',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  // change background colour if dragging\n  background: isDragging ? '#ffbbaf' : 'white',\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n})\n\nconst Todo = styled.div({\n  width: '100%',\n})\n\nconst RemoveButton = styled.span({\n  cursor: 'pointer',\n  color: colors.red,\n  textAlign: 'center',\n  width: '40px',\n\n  '&:hover': {\n    color: colors.redSecondary,\n  },\n})\n\nconst CompletenesWrapper = styled.div({\n  textAlign: 'center',\n  width: '24px',\n  height: '24px',\n  marginRight: '10px',\n})\n\nconst Text = styled.div`\n  width: calc(100% - 40px);\n  padding: 3px 0;\n  text-decoration: ${({ isCompleted }) => isCompleted ? 'line-through' : 'none'}\n`\n\nconst CompletenesAndText = styled.div({\n  display: 'flex',\n  alignItems: 'center',\n  width: 'calc(100% - 40px)',\n})\n\nconst TodoComponent = (\n  todo: Todo,\n  remove: ?() => any,\n  toggleCompleteness: () => any,\n  provided: Object,\n  snapshot: Object,\n  isItBreak: boolean = true\n) => (\n  <Todo>\n    <div\n      ref={provided.innerRef}\n      style={getItemStyle(provided.draggableStyle, snapshot.isDragging)}\n      {...provided.dragHandleProps}\n    >\n      <CompletenesAndText>\n        <CompletenesWrapper>\n          <input\n            id={todo.id}\n            type=\"checkbox\"\n            checked={todo.isCompleted}\n            onChange={toggleCompleteness.bind(null, todo.id)}\n            disabled={!isItBreak}\n          />\n          <label htmlFor={todo.id} />\n        </CompletenesWrapper>\n\n        <Text isCompleted={todo.isCompleted}>{todo.text}</Text>\n      </CompletenesAndText>\n\n      {remove ? (\n        <RemoveButton onClick={remove.bind(null, todo.id)}>\n          <i className=\"fa fa-remove\" />\n        </RemoveButton>\n      ) : (\n        ''\n      )}\n    </div>\n    {provided.placeholder}\n  </Todo>\n)\n\nexport default TodoComponent\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom'\n\nimport TodoComponent from '../components/Todo'\nimport colors from '../constants/colors'\n\nconst EmptyTodo = styled.div({\n  color: '#999',\n  textAlign: 'center',\n  borderBottom: '1px solid #eee',\n  padding: '15px 0',\n\n  '&>a': {\n    color: colors.red,\n    textDecoration: 'none',\n\n    '&:hover': {\n      color: colors.redSecondary,\n    },\n  },\n})\n\nclass CurrentTodo extends React.Component {\n  state = {\n    currentTodo: null,\n    todoOpacity: 1,\n  }\n\n  constructor(props) {\n    super(props)\n\n    const { todos, currentTodoId } = props\n    const currentTodo = todos.find(t => t.id === currentTodoId)\n\n    this.state = {\n      currentTodo,\n      todoOpacity: 1,\n    }\n  }\n\n  componentWillReceiveProps = nextProps => {\n    const setTodoWithProps = this.setTodo.bind(this, nextProps)\n\n    if (\n      !this.state.currentTodo ||\n      !nextProps.currentTodoId ||\n      nextProps.currentTodoId === this.state.currentTodo.id\n    ) {\n      setTodoWithProps(nextProps.currentTodoId)\n    } else {\n      const currentTodoId = this.state.currentTodo\n        ? this.state.currentTodo.id\n        : null\n\n      setTodoWithProps(currentTodoId)\n\n      this.fadeOut()\n\n      setTimeout(() => {\n        setTodoWithProps(nextProps.currentTodoId)\n        this.fadeIn()\n      }, 400)\n    }\n  }\n\n  setTodo = (props, todoId) => {\n    const currentTodo = props.todos.find(t => t.id === todoId)\n    this.setState({ currentTodo })\n  }\n\n  fadeOut = () => this.fade(false)\n\n  fadeIn = () => this.fade(true)\n\n  fade = isItIn => {\n    const step = 0.2\n    setTimeout(() => {\n      const { todoOpacity } = this.state\n      const newTodoOpacity = isItIn ? todoOpacity + step : todoOpacity - step\n\n      this.setState({ todoOpacity: newTodoOpacity })\n\n      const isNeedMore = isItIn ? newTodoOpacity <= 1 : newTodoOpacity >= 0\n\n      if (isNeedMore) this.fade(isItIn)\n    }, 50)\n  }\n\n  render() {\n    const { isItBreak, toggleCompleteness } = this.props\n    const { currentTodo } = this.state\n\n    const Todo = currentTodo\n      ? TodoComponent.bind(\n          null,\n          currentTodo,\n          null,\n          toggleCompleteness,\n          {},\n          {},\n          isItBreak\n        )\n      : () => (\n          <EmptyTodo>\n            Вы еще не добавили задачу. <NavLink to=\"/todo\">Добавить</NavLink>\n          </EmptyTodo>\n        )\n\n    return (\n      <div style={{ opacity: this.state.todoOpacity }}>\n        <Todo />\n      </div>\n    )\n  }\n}\n\nexport default CurrentTodo\n","// @flow\nimport React from 'react'\nimport colors from '../constants/colors'\n\nclass Circle extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.ctx = null\n    this.quart = Math.PI / 2\n  }\n\n  componentDidMount = () => {\n    const bg = this.refs['timer-canvas']\n\n    this.ctx = bg.getContext('2d')\n    this.ctx.beginPath()\n    this.ctx.strokeStyle = this.props.isItWork ? colors.red : colors.green\n    this.ctx.lineCap = 'round'\n    this.ctx.closePath()\n    this.ctx.fill()\n    this.ctx.lineWidth = 15.0\n    this.imd = this.ctx.getImageData(0, 0, 700, 700)\n\n    this.draw(this.props.progressBarWidth)\n  }\n\n  componentDidUpdate = () => {\n    this.draw(this.props.progressBarWidth)\n  }\n\n  draw = current => {\n    const linePoint = (1 - current) * 2 - 0.5 + 0.01\n\n    this.ctx.putImageData(this.imd, 0, 0)\n    this.ctx.beginPath()\n    this.ctx.strokeStyle = this.props.isItWork ? '#ff6347' : '#0eb26d'\n    this.ctx.arc(350, 350, 300, -this.quart, linePoint * Math.PI, true)\n    this.ctx.stroke()\n  }\n\n  render() {\n    return <canvas ref=\"timer-canvas\" width=\"700\" height=\"700\" />\n  }\n}\n\nexport default Circle\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\nimport colors from '../constants/colors'\n\nconst Button = styled.button({\n  backgroundColor: 'white',\n  color: colors.red,\n  border: `1px solid ${colors.red}`,\n  padding: '15px',\n  borderRadius: '3px',\n  cursor: 'pointer',\n\n  '&:active, &:focus': {\n    outline: 'none',\n  },\n\n  '&:first-child': {\n    borderRight: 'none',\n    borderRadius: '3px 0 0 3px',\n  },\n\n  '&:last-child': {\n    borderLeft: 'none',\n    borderRadius: '0 3px 3px 0',\n  },\n\n  '&:hover': {\n    color: colors.redSecondary,\n  },\n})\n\nconst CenterButton = styled(Button)({\n  padding: '25px',\n  fontSize: '25px',\n\n  '&>i': {\n    width: '20px',\n  },\n})\n\nclass TimerControls extends React.Component {\n  state = {\n    isTicking: false,\n  }\n\n  start = () => {\n    this.setState({ isTicking: true })\n    this.props.start()\n  }\n\n  pause = () => {\n    this.setState({ isTicking: false })\n    this.props.pause()\n  }\n\n  render() {\n    const { next, reset } = this.props\n    const centerButtonProps = this.state.isTicking\n      ? { class: 'pause', handler: this.pause }\n      : { class: 'play', handler: this.start }\n\n    return (\n      <div>\n        <Button onClick={reset}>\n          <i className=\"fa fa-undo\" />\n        </Button>\n        <CenterButton onClick={centerButtonProps.handler}>\n          <i className={`fa fa-${centerButtonProps.class}`} />\n        </CenterButton>\n        <Button onClick={next}>\n          <i className=\"fa fa-forward\" />\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default TimerControls\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\nimport Circle from './Circle'\nimport TimerControls from './TimerControls'\n\nconst Watch = styled.div({\n  width: '90%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  margin: '10px auto 0',\n  position: 'relative',\n\n  '&>canvas': {\n    width: '100%',\n  },\n\n  '@media(min-width: 500px)': {\n    width: '70%',\n  },\n  '@media(min-width: 700px)': {\n    width: '50%',\n  },\n})\n\nconst TimeCounter = styled.div({\n  fontSize: '40px',\n  textAlign: 'center',\n  marginBottom: '10px',\n\n  '@media(min-width: 400px)': {\n    fontSize: '50px',\n  },\n})\n\nconst CircleContent = styled.div({\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst Timer = ({\n  formatedTimeCounter,\n  start,\n  next,\n  pause,\n  reset,\n  progressBarWidth,\n  isItWork,\n}) => (\n  <div>\n    <Watch>\n      <Circle progressBarWidth={progressBarWidth} isItWork={isItWork} />\n      <CircleContent>\n        <div>\n          <TimeCounter>{formatedTimeCounter}</TimeCounter>\n          <TimerControls\n            start={start}\n            pause={pause}\n            next={next}\n            reset={reset}\n          />\n        </div>\n      </CircleContent>\n    </Watch>\n  </div>\n)\n\nexport default Timer\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\nimport TimerCurrentTodo from '../components/TimerCurrentTodo'\nimport Timer from '../components/Timer'\n\nconst Content = styled.div({\n  marginBottom: '45px',\n})\n\nconst CurrentTodoWrapper = styled.div({\n  width: '70%',\n  margin: '0 auto',\n})\n\nconst TimerPage = props => {\n  return (\n    <Content>\n      <Timer {...props} />\n\n      <CurrentTodoWrapper>\n        <TimerCurrentTodo {...props} />\n      </CurrentTodoWrapper>\n    </Content>\n  )\n}\n\nexport default TimerPage\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { start, next, pause, reset } from '../redux/modules/timer'\nimport { toggleCompleteness } from '../redux/modules/todo'\nimport timeConverter from '../utils/timeConverter'\nimport intervals from '../constants/intervals'\nimport Timer from '../pages/Timer'\n\nconst TimerContainer = props => {\n  const formatedTimeCounter = timeConverter(props.restOfIntervalInSec)\n  const progressBarWidth =\n    props.restOfIntervalInSec /\n    (props.intervalDurationsInMin[props.currentInterval] * 60)\n  const isItWork = props.currentInterval === intervals.work\n\n  return (\n    <Timer\n      {...props}\n      formatedTimeCounter={formatedTimeCounter}\n      progressBarWidth={progressBarWidth}\n      isItWork={isItWork}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  const currentTodo = state.todo.filter(td => !td.isCompleted)[0]\n\n  return {\n    restOfIntervalInSec: state.timer.restOfIntervalInSec,\n    currentInterval: state.timer.currentInterval,\n    intervalDurationsInMin: state.settings.intervalDurationsInMin,\n    currentTodoId: currentTodo ? currentTodo.id : null,\n    todos: state.todo,\n    isItBreak: state.timer.currentInterval !== 'work',\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    start: () => dispatch(start()),\n    pause: () => dispatch(pause()),\n    next: () => dispatch(next()),\n    reset: () => dispatch(reset()),\n    toggleCompleteness: (todoId: string) =>\n      dispatch(toggleCompleteness(todoId)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimerContainer)\n","// @flow\nconst actionTypes = {\n  SET_WORK_DURATION: 'SET_WORK_DURATION',\n  SET_SMALL_BREAK_DURATION: 'SET_SMALL_BREAK_DURATION',\n  SET_BIG_BREAK_DURATION: 'SET_BIG_BREAK_DURATION',\n  SET_POMIDORO_IN_ROUND: 'SET_POMIDORO_IN_ROUND',\n  SET_TARGET_NUMBER_OF_POMIDORO: 'SET_TARGET_NUMBER_OF_POMIDORO',\n  TOGGLE_SHOW_NOTIFICATION: 'TOGGLE_SHOW_NOTIFICATION',\n}\n\ntype ActionType = $Keys<typeof actionTypes>\ntype Action = {\n  type: ActionType,\n  value: number,\n}\n\n// Action Creators\n\nexport function setWorkDuration(value: number): Action {\n  return {\n    type: actionTypes.SET_WORK_DURATION,\n    value,\n  }\n}\n\nexport function setSmallBreakDuration(value: number): Action {\n  return {\n    type: actionTypes.SET_SMALL_BREAK_DURATION,\n    value,\n  }\n}\n\nexport function setBigBreakDuration(value: number): Action {\n  return {\n    type: actionTypes.SET_BIG_BREAK_DURATION,\n    value,\n  }\n}\n\nexport function setPomidoroInRound(value: number): Action {\n  return {\n    type: actionTypes.SET_POMIDORO_IN_ROUND,\n    value,\n  }\n}\n\nexport function setTargetNumberOfPomidoro(value: number): Action {\n  return {\n    type: actionTypes.SET_TARGET_NUMBER_OF_POMIDORO,\n    value,\n  }\n}\n\nexport function toggleShowNotification(): Action {\n  return {\n    type: actionTypes.TOGGLE_SHOW_NOTIFICATION,\n  }\n}\n\n// Reducer\n\nconst initialState: SettingsState = {\n  intervalDurationsInMin: {\n    work: 25,\n    smallBreak: 5,\n    bigBreak: 30,\n  },\n  pomidoroInRound: 4,\n  targetNumberOfPomidoro: 10,\n  showNotification: true,\n}\n\nexport default function reducer(\n  state: SettingsState = initialState,\n  action: Action\n): SettingsState {\n  switch (action.type) {\n    case actionTypes.SET_WORK_DURATION:\n      return Object.assign({}, state, {\n        intervalDurationsInMin: Object.assign(\n          {},\n          state.intervalDurationsInMin,\n          {\n            work: action.value,\n          }\n        ),\n      })\n\n    case actionTypes.SET_SMALL_BREAK_DURATION:\n      return Object.assign({}, state, {\n        intervalDurationsInMin: Object.assign(\n          {},\n          state.intervalDurationsInMin,\n          {\n            smallBreak: action.value,\n          }\n        ),\n      })\n\n    case actionTypes.SET_BIG_BREAK_DURATION:\n      return Object.assign({}, state, {\n        intervalDurationsInMin: Object.assign(\n          {},\n          state.intervalDurationsInMin,\n          {\n            bigBreak: action.value,\n          }\n        ),\n      })\n\n    case actionTypes.SET_POMIDORO_IN_ROUND:\n      return Object.assign({}, state, {\n        pomidoroInRound: action.value,\n      })\n\n    case actionTypes.SET_TARGET_NUMBER_OF_POMIDORO:\n      return Object.assign({}, state, {\n        targetNumberOfPomidoro: action.value,\n      })\n\n    case actionTypes.TOGGLE_SHOW_NOTIFICATION:\n      return Object.assign({}, state, {\n        showNotification: !state.showNotification,\n      })\n\n    default:\n      return state\n  }\n}\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\nimport colors from '../constants/colors'\n\nconst selectAll = event => event.target.select()\n\nconst Content = styled.div({\n  width: '100%',\n  margin: '20px auto 0',\n  padding: '15px',\n  boxSizing: 'border-box',\n\n  '@media(min-width: 500px)': {\n    padding: '15px 0',\n    width: '70%',\n  },\n})\n\nconst Row = styled.div({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: '24px',\n\n  '&:not(:last-child)': {\n    marginBottom: '15px',\n  },\n})\n\nconst Label = styled.div({})\n\nconst Inputs = styled.div({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  width: '40%',\n\n  '&>input': {\n    margin: '0 10px',\n    boxShadow: 'inset 0 1px 3px rgba(0, 0, 0, 0.1)',\n    border: '2px solid #ccc',\n    borderRadius: '4px',\n    width: '30px',\n    textAlign: 'center',\n  },\n})\nconst Button = styled.span({\n  color: colors.red,\n  cursor: 'pointer',\n  fontSize: '25px',\n  '&:hover': {\n    color: colors.redSecondary,\n  },\n})\n\nconst CheckBoxWrapper = styled.div({\n  height: '24px',\n  width: '60px',\n\n  '& label': {\n    paddingLeft: '24px !important',\n  },\n})\n\nconst SettingsPage = ({\n  settings,\n  set,\n  toggleShowNotification,\n}: {\n  settings: SettingsState,\n  set: (field: string, value: string | number) => void,\n}) => (\n  <Content>\n    <Row>\n      <Label>Время работы</Label>\n      <Inputs>\n        <Button\n          onClick={() =>\n            set('WorkDuration', settings.intervalDurationsInMin.work - 1)}\n        >\n          <i className=\"fa fa-minus\" />\n        </Button>\n        <input\n          type=\"text\"\n          value={settings.intervalDurationsInMin.work}\n          onChange={event => set('WorkDuration', event.target.value)}\n          onFocus={selectAll}\n        />\n        <Button\n          onClick={() =>\n            set('WorkDuration', settings.intervalDurationsInMin.work + 1)}\n        >\n          <i className=\"fa fa-plus\" />\n        </Button>\n      </Inputs>\n    </Row>\n\n    <Row>\n      <Label>Время малого отдыха</Label>\n      <Inputs>\n        <Button\n          onClick={() =>\n            set(\n              'SmallBreakDuration',\n              settings.intervalDurationsInMin.smallBreak - 1\n            )}\n        >\n          <i className=\"fa fa-minus\" />\n        </Button>\n        <input\n          type=\"text\"\n          value={settings.intervalDurationsInMin.smallBreak}\n          onChange={event => set('SmallBreakDuration', event.target.value)}\n          onFocus={selectAll}\n        />\n        <Button\n          onClick={() =>\n            set(\n              'SmallBreakDuration',\n              settings.intervalDurationsInMin.smallBreak + 1\n            )}\n        >\n          <i className=\"fa fa-plus\" />\n        </Button>\n      </Inputs>\n    </Row>\n\n    <Row>\n      <Label>Время большого отдыха</Label>\n      <Inputs>\n        <Button\n          onClick={() =>\n            set(\n              'BigBreakDuration',\n              settings.intervalDurationsInMin.bigBreak - 1\n            )}\n        >\n          <i className=\"fa fa-minus\" />\n        </Button>\n        <input\n          type=\"text\"\n          value={settings.intervalDurationsInMin.bigBreak}\n          onChange={event => set('BigBreakDuration', event.target.value)}\n          onFocus={selectAll}\n        />\n        <Button\n          onClick={() =>\n            set(\n              'BigBreakDuration',\n              settings.intervalDurationsInMin.bigBreak + 1\n            )}\n        >\n          <i className=\"fa fa-plus\" />\n        </Button>\n      </Inputs>\n    </Row>\n\n    <Row>\n      <Label>Количество помидоров в раунде</Label>\n      <Inputs>\n        <Button\n          onClick={() => set('PomidoroInRound', settings.pomidoroInRound - 1)}\n        >\n          <i className=\"fa fa-minus\" />\n        </Button>\n        <input\n          type=\"text\"\n          value={settings.pomidoroInRound}\n          onChange={event => set('PomidoroInRound', event.target.value)}\n          onFocus={selectAll}\n        />\n        <Button\n          onClick={() => set('PomidoroInRound', settings.pomidoroInRound + 1)}\n        >\n          <i className=\"fa fa-plus\" />\n        </Button>\n      </Inputs>\n    </Row>\n\n    <Row>\n      <Label>Цель на день</Label>\n      <Inputs>\n        <Button\n          onClick={() =>\n            set('TargetNumberOfPomidoro', settings.targetNumberOfPomidoro - 1)}\n        >\n          <i className=\"fa fa-minus\" />\n        </Button>\n        <input\n          type=\"text\"\n          value={settings.targetNumberOfPomidoro}\n          onChange={event => set('TargetNumberOfPomidoro', event.target.value)}\n          onFocus={selectAll}\n        />\n        <Button\n          onClick={() =>\n            set('TargetNumberOfPomidoro', settings.targetNumberOfPomidoro + 1)}\n        >\n          <i className=\"fa fa-plus\" />\n        </Button>\n      </Inputs>\n    </Row>\n\n    <Row>\n      <Label>Показывать уведомления</Label>\n      <Inputs>\n        <CheckBoxWrapper>\n          <input\n            id=\"show-notification\"\n            type=\"checkbox\"\n            checked={settings.showNotification}\n            onChange={toggleShowNotification}\n          />\n          <label htmlFor=\"show-notification\" />\n        </CheckBoxWrapper>\n      </Inputs>\n    </Row>\n  </Content>\n)\n\nexport default SettingsPage\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { init } from '../redux/modules/timer'\nimport {\n  setBigBreakDuration,\n  setSmallBreakDuration,\n  setPomidoroInRound,\n  setTargetNumberOfPomidoro,\n  setWorkDuration,\n  toggleShowNotification,\n} from '../redux/modules/settings'\nimport Settings from '../pages/Settings'\n\nclass SettingsContainer extends React.Component {\n  set = (field: string, rawValue: string | number) => {\n    const value = this._parseInput(rawValue)\n    const actionCreator = this.props[`set${field}`]\n\n    actionCreator(value)\n    this.props.init()\n  };\n\n  render() {\n    return (\n      <Settings\n        settings={this.props.settings}\n        set={this.set}\n        toggleShowNotification={this.props.toggleShowNotification}\n      />\n    )\n  }\n\n  _parseInput(value: string | number): number {\n    const valueInt = parseInt(value, 10)\n\n    switch (true) {\n      case valueInt > 60:\n        return 60\n      case valueInt <= 0:\n      case isNaN(valueInt):\n        return 1\n      default:\n        return valueInt\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    settings: state.settings,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setWorkDuration: value => dispatch(setWorkDuration(value)),\n    setSmallBreakDuration: value => dispatch(setSmallBreakDuration(value)),\n    setBigBreakDuration: value => dispatch(setBigBreakDuration(value)),\n    setPomidoroInRound: value => dispatch(setPomidoroInRound(value)),\n    setTargetNumberOfPomidoro: value =>\n      dispatch(setTargetNumberOfPomidoro(value)),\n    toggleShowNotification: () => dispatch(toggleShowNotification()),\n    init: () => dispatch(init()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsContainer)\n","// @flow\nimport React from 'react'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nimport TodoComponent from './Todo'\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? '#7dc1a5' : 'white',\n})\n\nconst TodoList = ({\n  todos,\n  remove,\n  reorder,\n  toggleCompleteness,\n}: {\n  todos: Array<Todo>,\n  remove: () => any,\n  reorder: () => any,\n  toggleCompleteness: () => any,\n}) => (\n  <DragDropContext\n    onDragEnd={({ source, destination }) =>\n      source && destination && reorder(source.index, destination.index)}\n  >\n    <Droppable droppableId=\"droppable\">\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          style={getListStyle(snapshot.isDraggingOver)}\n        >\n          {todos.map((todo, i) => (\n            <Draggable key={todo.id} index={i} draggableId={todo.id}>\n              {TodoComponent.bind(null, todo, remove, toggleCompleteness)}\n            </Draggable>\n          ))}\n        </div>\n      )}\n    </Droppable>\n  </DragDropContext>\n)\n\nexport default TodoList\n","// @flow\nimport React from 'react'\nimport styled from '@emotion/styled'\n\nimport TodoList from '../components/TodoList'\nimport colors from '../constants/colors'\n\nconst Content = styled.div({\n  width: '100%',\n  margin: '20px auto 0',\n  padding: '15px',\n  boxSizing: 'border-box',\n\n  '@media(min-width: 500px)': {\n    padding: '15px 0',\n    width: '70%',\n  },\n})\n\nconst Button = styled.button({\n  backgroundColor: 'white',\n  color: colors.red,\n  border: `1px solid ${colors.red}`,\n  width: '40px',\n  height: '40px',\n  borderRadius: '0 3px 3px 0',\n  cursor: 'pointer',\n  boxSizing: 'border-box',\n  fontSize: '17px',\n  display: 'flex',\n  justifyContent: 'center',\n  borderLeft: 'none',\n\n  '&:active, &:focus': {\n    outline: 'none',\n  },\n\n  '&:hover': {\n    color: colors.redSecondary,\n  },\n})\n\nconst Input = styled.input({\n  width: 'calc(100% - 40px)',\n  borderRadius: '3px 0 0 3px',\n  height: '40px',\n  border: `1px solid ${colors.red}`,\n  boxSizing: 'border-box',\n  padding: '0 5px',\n\n  '&:active, &:focus': {\n    outline: 'none',\n  },\n})\n\nconst Controls = styled.div({\n  display: 'flex',\n})\n\nconst TodoPage = ({\n  todos,\n  add,\n  toggleCompleteness,\n  remove,\n  reorder,\n  todoText,\n  handleTodoTextChange,\n  handleKeyPress,\n}: {\n  todos: Array<Todo>,\n  add: () => any,\n  toggleCompleteness: () => any,\n  remove: () => any,\n  reorder: () => any,\n  todoText: string,\n  handleTodoTextChange: () => any,\n  handleKeyPress: () => any,\n}) => (\n  <Content>\n    <Controls>\n      <Input\n        type=\"text\"\n        value={todoText}\n        onChange={handleTodoTextChange}\n        onKeyPress={handleKeyPress}\n        placeholder=\"Нужно сделать\"\n      />\n      <Button onClick={add}>\n        <i className=\"fa fa-plus\" />\n      </Button>\n    </Controls>\n\n    <div>\n      <TodoList\n        todos={todos}\n        remove={remove}\n        reorder={reorder}\n        toggleCompleteness={toggleCompleteness}\n      />\n    </div>\n  </Content>\n)\n\nexport default TodoPage\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { add, toggleCompleteness, remove, reorder } from '../redux/modules/todo'\nimport Todo from '../pages/Todo'\n\nclass TodoContainer extends React.Component {\n  state = {\n    todoText: '',\n  }\n\n  handleTodoTextChange = (e: any) => {\n    this.setState({\n      todoText: e.target.value,\n    })\n  }\n\n  handleKeyPress = e => {\n    if (e.key !== 'Enter') return\n\n    this.addTodo()\n  }\n\n  addTodo = () => {\n    if (!this.state.todoText) return\n\n    this.props.add(this.state.todoText)\n    this.setState({ todoText: '' })\n  }\n\n  render() {\n    return (\n      <Todo\n        {...this.props}\n        add={this.addTodo}\n        todoText={this.state.todoText}\n        handleTodoTextChange={this.handleTodoTextChange}\n        handleKeyPress={this.handleKeyPress}\n      />\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todos: state.todo,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    add: (text: string) => dispatch(add(text)),\n    toggleCompleteness: (todoId: string) =>\n      dispatch(toggleCompleteness(todoId)),\n    remove: (todoId: string) => dispatch(remove(todoId)),\n    reorder: (source: number, destination: number) =>\n      dispatch(reorder(source, destination)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer)\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport colors from '../constants/colors'\n\nconst Content = styled.div({\n  padding: '15px 15px',\n})\n\nconst Title = styled.h2({\n  fontSize: 20,\n})\n\nconst Info = styled.div({\n  fontSize: 14,\n  fontStyle: 'italic',\n  marginTop: '20px',\n})\n\nconst Link = styled.a({\n  color: colors.red,\n})\n\nconst Faq = () => (\n  <Content>\n    <Title>Задачи</Title>\n    <p>\n      Нажмите “Добавить” или перейдите на вкладку “Задачи” и создайте список\n      планируемых дел. Меняйте порядок выполнения, перетаскивая задачи на нужную\n      позицию.\n    </p>\n    <hr />\n    <Title>Настройки</Title>\n    <p>\n      Укажите в минутах время работы и перерывов, количество помидорок в раунде,\n      план в помидорках на сегодняшний день и отметьте, хотите ли видеть\n      push-уведомления о начале и окончании помидорок. Чтобы получать\n      уведомления, оставьте страницу с таймером открытой в браузере.\n    </p>\n    <hr />\n    <Title>Таймер</Title>\n    <p>\n      Пользуйтесь им так же, как вашим любимым плеером. Начинайте помидоры,\n      повторяйте отрезки работы и отдыха или переходите к следующему с помощью\n      кнопок “воспроизведения”, “повтора” и “переключения”.\n    </p>\n    <Info>\n      Подробнее o технике Pomodoro почитать можно{' '}\n      <Link\n        target=\"_blank\"\n        href=\"https://lifehacker.ru/2015/05/28/all-about-pomodoro/\"\n      >\n        здесь\n      </Link>\n    </Info>\n  </Content>\n)\n\nexport default Faq\n","// @flow\nimport React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport styled from '@emotion/styled'\nimport { Helmet } from 'react-helmet'\n\nimport Nav from './Nav'\nimport ProgressBar from '../containers/ProgressBarContainer'\nimport Timer from '../containers/TimerContainer'\nimport Settings from '../containers/SettingsContainer'\nimport Todo from '../containers/TodoContainer'\nimport Faq from '../pages/Faq'\n\nimport 'normalize.css/normalize.css'\nimport '../styles/base.css'\n\nconst Title = styled.h1({\n  fontSize: '25px',\n  fontWeight: '400',\n  textAlign: 'center',\n  margin: '0 0 20px',\n})\n\nconst App = styled.div({\n  backgroundColor: 'white',\n  borderRadius: '5px',\n  padding: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  margin: '0 auto',\n\n  '@media(min-width: 500px)': {\n    padding: '20px 0',\n    width: '500px',\n    border: '1px solid #ccc',\n    boxShadow: '0 0 10px rgba(0,0,0,0.5)',\n  },\n  '@media(min-width: 700px)': {\n    width: '700px',\n  },\n\n  '@media(min-height: 440px)': {\n    minHeight: '400px',\n  },\n  '@media(min-height: 640px)': {\n    minHeight: '600px',\n  },\n})\n\nconst Content = styled.div({\n  flex: 1,\n})\n\nconst AppWithRouter = ({ timer }: { timer: number }) => (\n  <Router>\n    <App>\n      <Content>\n        <Helmet>\n          <title>{timer}</title>\n        </Helmet>\n\n        <Title>Помидорко-таймер</Title>\n\n        <ProgressBar />\n\n        <Route exact path=\"/\" component={Timer} />\n        <Route path=\"/todo\" component={Todo} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/faq\" component={Faq} />\n      </Content>\n\n      <Nav />\n    </App>\n  </Router>\n)\n\nexport default AppWithRouter\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { init } from '../redux/modules/timer'\nimport timeConverter from '../utils/timeConverter'\nimport { getPermission } from \"../utils/notifications\"\nimport App from '../components/App'\n\nclass AppContainer extends React.Component {\n  componentWillMount() {\n    getPermission()\n    this.props.initTimer()\n  }\n\n  render() {\n    const { timer } = this.props\n\n    return <App timer={timer} />\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    timer: timeConverter(state.timer.restOfIntervalInSec),\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initTimer: () => dispatch(init()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport timer from './modules/timer'\nimport settings from './modules/settings'\nimport todo from './modules/todo'\n\nconst reducer = combineReducers({\n  timer,\n  settings,\n  todo,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst configureStore = initialState =>\n  createStore(reducer, initialState, composeEnhancers(applyMiddleware(thunk)))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/AppContainer'\nimport registerServiceWorker from './registerServiceWorker'\nimport configureStore from './redux/configureStore'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}